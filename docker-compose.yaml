services:
  # --- Infrastructure ---
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: clearsky-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbit-mq/rabbitmq_data:/var/lib/rabbitmq
      - ./rabbit-mq/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_LOAD_DEFINITIONS: /etc/rabbitmq/definitions.json
    networks:
      - clearsky-network

  # --- Review Service ---
  review-service:
    build: ./review-service
    container_name: review-service
    ports:
      - "8400:8400"
    environment:
      - PORT=8400
      - MONGODB_URI=mongodb://review-mongodb:27017/review?authSource=admin
    depends_on:
      - review-mongodb
    networks:
      - review-network
      - clearsky-network
    restart: unless-stopped

  review-mongodb:
    image: mongo:latest
    container_name: review-mongodb
    volumes:
      - review-mongo-data:/data/db
    networks:
      - review-network
    restart: unless-stopped

  # --- Credit Service ---
  institution-credit-service:
    build: ./credit-service
    container_name: institution-credit-service
    ports:
      - "8102:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://credit-mongodb:27017/credits
    depends_on:
      - credit-mongodb
    networks:
      - credits-network
      - clearsky-network

  credit-mongodb:
    image: mongo:latest
    container_name: credit-mongodb
    volumes:
      - credit-mongo-data:/data/db
    networks:
      - credits-network

  # --- Grade Service ---
  grade-service:
    build: ./grade-service
    container_name: grade-service
    ports:
      - "8103:3000" # Mapped to a different host port
    environment:
      - PORT=3000
      - MONGO_URI=mongodb://grade-mongodb:27017/grades
    depends_on:
      - grade-mongodb
    networks:
      - grades-network
      - clearsky-network

  grade-mongodb:
    image: mongo:latest
    container_name: grade-mongodb
    volumes:
      - grade-mongo-data:/data/db\
    networks:
      - grades-network

  # --- Orchestrator ---
  review-orchestrator:
    build: ./review-orchestrator
    container_name: review-orchestrator
    ports:
      - "8082:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - RABBITMQ_URL=${RABBITMQ_URL:-amqp://admin:secure21@rabbitmq:5672}
      - REVIEW_SERVICE_URL=http://review-service:8400/api/reviews
    depends_on:
      - rabbitmq
      - review-service
    networks:
      - clearsky-network
    restart: unless-stopped

  # --- API Gateway ---
  krakend:
    image: devopsfaith/krakend:2.7
    container_name: krakend_api_gateway
    ports:
      - "8080:8080"
    volumes:
      - ./krakend-api-gateway/krakend.json:/etc/krakend/krakend.json:ro
    depends_on:
      - review-service
      - institution-credit-service
      - grade-service
      - review-orchestrator
      # Add other backend services here as they are created
    networks:
      - clearsky-network

networks:
  clearsky-network:
    driver: bridge
  review-network:
    driver: bridge
  credits-network:
    driver: bridge
  grades-network:
    driver: bridge

volumes:
  rabbitmq_data:
  review-mongo-data:
  credit-mongo-data:
  grade-mongo-data: